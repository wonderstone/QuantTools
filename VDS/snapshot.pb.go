// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: snapshot.proto

package vdsdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VDSLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"` //价格
	Vol   int32   `protobuf:"varint,2,opt,name=vol,proto3" json:"vol,omitempty"`      //量
}

func (x *VDSLevel) Reset() {
	*x = VDSLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VDSLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDSLevel) ProtoMessage() {}

func (x *VDSLevel) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDSLevel.ProtoReflect.Descriptor instead.
func (*VDSLevel) Descriptor() ([]byte, []int) {
	return file_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *VDSLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *VDSLevel) GetVol() int32 {
	if x != nil {
		return x.Vol
	}
	return 0
}

//快照
type VDSSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string              `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`                                                                                                 //代码 600000
	Exch      Exch                `protobuf:"varint,2,opt,name=exch,proto3,enum=Exch" json:"exch,omitempty"`                                                                                          //市场 SH SZ BJ
	Last      float64             `protobuf:"fixed64,3,opt,name=last,proto3" json:"last,omitempty"`                                                                                                   //最新
	Open      float64             `protobuf:"fixed64,4,opt,name=open,proto3" json:"open,omitempty"`                                                                                                   //开盘价
	High      float64             `protobuf:"fixed64,5,opt,name=high,proto3" json:"high,omitempty"`                                                                                                   //最高价
	Low       float64             `protobuf:"fixed64,6,opt,name=low,proto3" json:"low,omitempty"`                                                                                                     //最低价
	Close     float64             `protobuf:"fixed64,7,opt,name=close,proto3" json:"close,omitempty"`                                                                                                 //收盘价
	Preclose  float64             `protobuf:"fixed64,8,opt,name=preclose,proto3" json:"preclose,omitempty"`                                                                                           //昨收
	Buylevel  map[int32]*VDSLevel `protobuf:"bytes,10,rep,name=buylevel,proto3" json:"buylevel,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   //五档/十档买盘口
	Selllevel map[int32]*VDSLevel `protobuf:"bytes,11,rep,name=selllevel,proto3" json:"selllevel,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //五档/十档卖盘口
	Date      int32               `protobuf:"varint,12,opt,name=date,proto3" json:"date,omitempty"`                                                                                                   //交易日期 20221208
	Uptetime  int32               `protobuf:"varint,13,opt,name=uptetime,proto3" json:"uptetime,omitempty"`                                                                                           //更新时间 100102368
}

func (x *VDSSnapshot) Reset() {
	*x = VDSSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VDSSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDSSnapshot) ProtoMessage() {}

func (x *VDSSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDSSnapshot.ProtoReflect.Descriptor instead.
func (*VDSSnapshot) Descriptor() ([]byte, []int) {
	return file_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *VDSSnapshot) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *VDSSnapshot) GetExch() Exch {
	if x != nil {
		return x.Exch
	}
	return Exch_SZ
}

func (x *VDSSnapshot) GetLast() float64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *VDSSnapshot) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *VDSSnapshot) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *VDSSnapshot) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *VDSSnapshot) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *VDSSnapshot) GetPreclose() float64 {
	if x != nil {
		return x.Preclose
	}
	return 0
}

func (x *VDSSnapshot) GetBuylevel() map[int32]*VDSLevel {
	if x != nil {
		return x.Buylevel
	}
	return nil
}

func (x *VDSSnapshot) GetSelllevel() map[int32]*VDSLevel {
	if x != nil {
		return x.Selllevel
	}
	return nil
}

func (x *VDSSnapshot) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *VDSSnapshot) GetUptetime() int32 {
	if x != nil {
		return x.Uptetime
	}
	return 0
}

var File_snapshot_proto protoreflect.FileDescriptor

var file_snapshot_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x08, 0x56,
	0x44, 0x53, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x6f, 0x6c, 0x22,
	0xf4, 0x03, 0x0a, 0x0b, 0x56, 0x44, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x04, 0x65, 0x78, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x52, 0x04, 0x65, 0x78,
	0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x65, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x56, 0x44, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x2e, 0x42, 0x75, 0x79, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x62, 0x75, 0x79, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x65,
	0x6c, 0x6c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x56, 0x44, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x6c,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x70, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x46, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x56, 0x44, 0x53, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a,
	0x0e, 0x53, 0x65, 0x6c, 0x6c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x56, 0x44, 0x53, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x76, 0x64, 0x73,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snapshot_proto_rawDescOnce sync.Once
	file_snapshot_proto_rawDescData = file_snapshot_proto_rawDesc
)

func file_snapshot_proto_rawDescGZIP() []byte {
	file_snapshot_proto_rawDescOnce.Do(func() {
		file_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_snapshot_proto_rawDescData)
	})
	return file_snapshot_proto_rawDescData
}

var file_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snapshot_proto_goTypes = []interface{}{
	(*VDSLevel)(nil),    // 0: VDSLevel
	(*VDSSnapshot)(nil), // 1: VDSSnapshot
	nil,                 // 2: VDSSnapshot.BuylevelEntry
	nil,                 // 3: VDSSnapshot.SelllevelEntry
	(Exch)(0),           // 4: Exch
}
var file_snapshot_proto_depIdxs = []int32{
	4, // 0: VDSSnapshot.exch:type_name -> Exch
	2, // 1: VDSSnapshot.buylevel:type_name -> VDSSnapshot.BuylevelEntry
	3, // 2: VDSSnapshot.selllevel:type_name -> VDSSnapshot.SelllevelEntry
	0, // 3: VDSSnapshot.BuylevelEntry.value:type_name -> VDSLevel
	0, // 4: VDSSnapshot.SelllevelEntry.value:type_name -> VDSLevel
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_snapshot_proto_init() }
func file_snapshot_proto_init() {
	if File_snapshot_proto != nil {
		return
	}
	file_def_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_snapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VDSLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VDSSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snapshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snapshot_proto_goTypes,
		DependencyIndexes: file_snapshot_proto_depIdxs,
		MessageInfos:      file_snapshot_proto_msgTypes,
	}.Build()
	File_snapshot_proto = out.File
	file_snapshot_proto_rawDesc = nil
	file_snapshot_proto_goTypes = nil
	file_snapshot_proto_depIdxs = nil
}
